#!/usr/local/bin/expect
# usage mb_clk fin fout




if {$argc == 0} {
	if {[catch {set SF [open /dev/shm/mb_clock r]} ]} {
		puts "not set"
	} else {
		gets $SF line
		puts $line
	}
	return 0
} elseif {$argc == 2} {
	exec mb_clk [lindex $argv 0] [lindex $argv 1] action  >& /var/log/mb_clock.log
	return 0
} elseif {($argc == 3 && [lindex $argv 2] == "action")} {
	;
} else {
	puts "ERROR: Usage: set_mb_clk fin_kHz fout_kHz"
	return 1
}


# action runs here 

proc report {message} {
	set LOG	[open /dev/shm/mb_clock w]
	puts $LOG $message
	close $LOG
}

log_user 1

set MN "(\[0-9\]*)"
puts "$argv kickoff"
set FIN  [lindex $argv 0]
set FOUT [lindex $argv 1]

spawn ob_calc_527 -o - --fin $FIN $FOUT
while { 1 } {
	expect {
		-re "find_best_ratio op_range $MN" {
			puts "m1:$expect_out(0,string)"
		}
		-re "$MN $MN $MN $MN $MN $MN" {
			puts "m2:S:$expect_out(1,string) A:$expect_out(2,string)"
			break;
		}
		-re "(.*)\n" {
			puts "Error: $expect_out(1,string)"
			report "ERROR"
		}
	}
}

puts "DONE expecting .. "

set SP  $expect_out(1,string)
set ACT $expect_out(2,string)
set FDW $expect_out(3,string)
set RDW $expect_out(4,string)
set R	$expect_out(5,string)
set ODW $expect_out(6,string)


report "FIN:$FIN FOUT:$FOUT SP:$SP ACT:$ACT FDW:$FDW RDW:$RDW ODW:$ODW"


proc putBits {root pfx dval} {
	binary scan [binary format c $dval] b* bits
	set knobs [glob -directory $root $pfx*]
	puts "$root $pfx $dval => $bits"
	set bn 0
	foreach K [lsort $knobs] {
		set xx [string index $bits $bn]
		set F [open $K w]
		puts $F $xx
		incr bn
	}
}

set ROOT	"/dev/gpio/CLK/MB"

putBits "$ROOT/FDW/" F $FDW
putBits "$ROOT/RDW/" R $RDW
putBits "$ROOT/ODW/" S $ODW
puts "$argv end"
